X7 = col_skip()))
View(data)
data <- read_csv("DerekOlson/CS6012/assignment03/data.csv", header = true)
data <- read_csv("DerekOlson/CS6012/assignment03/data.csv", sep=',')
data <- read_csv("DerekOlson/CS6012/assignment03/data.csv")
data <- read_csv("DerekOlson/CS6012/assignment03/data.csv")
library(readr)
data <- read_csv("DerekOlson/CS6012/assignment03/data.csv",
col_types = cols(X1 = col_number(), X2 = col_number()))
View(data)
library(readr)
data <- read_csv("DerekOlson/CS6012/assignment03/data.csv",
col_types = cols(X3 = col_skip(), X4 = col_skip(),
X5 = col_skip(), X6 = col_skip(),
X7 = col_skip()))
View(data)
library(readr)
> data <- read_csv("DerekOlson/CS6012/assignment03/data.csv", col_types = cols(X3 = col_skip(), X4 = col_skip(), X5 = col_skip(), X6 = col_skip(), X7 = col_skip()))
data <- read_csv("DerekOlson/CS6012/assignment03/data.csv", col_types = cols(X3 = col_skip(), X4 = col_skip(), X5 = col_skip(), X6 = col_skip(), X7 = col_skip()))
colnames(data)<-c("size", "time")
View(data)
plot(data[1], data[2])
plot(data[1], data[2], p)
plot(data[1], data[2], type="p")
plot(data[1], data[2], type="p")
plot(data$size, data$time, type="p")
#word sorting
dfWords <- data[1:4,]
plot(dfWords$size, dfWords$time, type="p")
#word sorting
dfAnagrams <- data[5:9,]
plot(dfAnagrams$size, dfAnagrams$time, type="p")
plot(dfWords$size, dfWords$time, type="l")
plot(dfAnagrams$size, dfAnagrams$time, type="l")
anagramData = log(dfAnagrams)
plot(dfAnagrams$size, dfAnagrams$time, type="l")
#word sorting
dfAnagrams <- data[5:9,]
plot(dfAnagrams$size, dfAnagrams$time, type="l")
anagramData = log(dfAnagrams)
plot(anagramData$size, anagramData$time, type="l")
data <- read_csv("DerekOlson/CS6012/assignment03/word_sorting.csv", col_types = cols(X3 = col_skip(), X4 = col_skip(), X5 = col_skip(), X6 = col_skip(), X7 = col_skip()))
View(data)
colnames(data)<-c("size", "time")
View(data)
#word sorting
plot(data$size, data$time, type="l")
data <- read_csv("DerekOlson/CS6012/assignment03/word_sorting.csv", col_types = cols(X3 = col_skip(), X4 = col_skip(), X5 = col_skip(), X6 = col_skip(), X7 = col_skip()))
colnames(data)<-c("size", "time")
View(data)
#word sorting
plot(data$size, data$time, type="l")
wordSortingData = log(data)
plot(wordSortingData$size, wordSortingData$time, type = "l")
#word sorting
plot(data$size, data$time, type="l")
# add a title and subtitle
title("Word Sorting", "log transformed")
# add a legend
legend(xrange[1], yrange[2], 1:ntrees, cex=0.8, col=colors,
pch=plotchar, lty=linetype, title="Word Sorting")
# add a title and subtitle
title("Word Sorting: log transformed")
#word sorting
plot(data$size, data$time, type="l")
# add a title and subtitle
title("Word Sorting: log transformed")
wordSortingData = log(data)
plot(wordSortingData$size, wordSortingData$time, type = "l")
title("Word Sorting: log transformed")
title("Word Sorting)
wordSortingData = log(data)
plot(wordSortingData$size, wordSortingData$time, type = "l")
title("Word Sorting: log transformed")
#word sorting
anagram_data <- read_csv("DerekOlson/CS6012/assignment03/anagrams.csv", col_types = cols(X3 = col_skip(), X4 = col_skip(), X5 = col_skip(), X6 = col_skip(), X7 = col_skip()))
dfAnagrams <- data[5:9,]
plot(dfAnagrams$size, dfAnagrams$time, type="l")
anagramData = log(dfAnagrams)
plot(anagramData$size, anagramData$time, type="l")
title("Word Sorting)
wordSortingData = log(data)
plot(wordSortingData$size, wordSortingData$time, type = "l")
title("Word Sorting: log transformed")
#word sorting
anagram_data <- read_csv("DerekOlson/CS6012/assignment03/anagrams.csv", col_types = cols(X3 = col_skip(), X4 = col_skip(), X5 = col_skip(), X6 = col_skip(), X7 = col_skip()))
dfAnagrams <- data[5:9,]
plot(dfAnagrams$size, dfAnagrams$time, type="l")
anagramData = log(dfAnagrams)
plot(anagramData$size, anagramData$time, type="l")
View(anagram_data)
title("Word Sorting)
wordSortingData = log(data)
plot(wordSortingData$size, wordSortingData$time, type = "l")
title("Word Sorting: log transformed")
#word sorting
anagram_data <- read_csv("DerekOlson/CS6012/assignment03/anagrams.csv", col_types = cols(X3 = col_skip(), X4 = col_skip(), X5 = col_skip(), X6 = col_skip(), X7 = col_skip()))
colnames(anagram_data)<-c("size", "time")
View(anagram_data)
plot(anagram_data$size, anagram_data$time, type="l")
anagramData = log(dfAnagrams)
plot(anagramData$size, anagramData$time, type="l")
library(readr)
data <- read_csv("DerekOlson/CS6012/assignment03/word_sorting.csv", col_types = cols(X3 = col_skip(), X4 = col_skip(), X5 = col_skip(), X6 = col_skip(), X7 = col_skip()))
colnames(data)<-c("size", "time")
View(data)
#word sorting
plot(data$size, data$time, type="l")
title("Word Sorting)
wordSortingData = log(data)
plot(wordSortingData$size, wordSortingData$time, type = "l")
title("Word Sorting: log transformed")
#word sorting
anagram_data <- read_csv("DerekOlson/CS6012/assignment03/anagrams.csv", col_types = cols(X3 = col_skip(), X4 = col_skip(), X5 = col_skip(), X6 = col_skip(), X7 = col_skip()))
colnames(anagram_data)<-c("size", "time")
View(anagram_data)
plot(anagram_data$size, anagram_data$time, type="l")
title("Anagram Groups")
anagramData = log(dfAnagrams)
plot(anagramData$size, anagramData$time, type="l")
plot(data$size, data$time, type="l")
title("Word Sorting)
plot(wordSortingData$size, wordSortingData$time, type = "l")
title("Word Sorting: log transformed")
#word sorting
plot(data$size, data$time, type="l")
title("Word Sorting)
title("Word Sorting)
wordSortingData = log(data)
plot(wordSortingData$size, wordSortingData$time, type = "l")
title("Word Sorting: log transformed")
#word sorting
anagram_data <- read_csv("DerekOlson/CS6012/assignment03/anagrams.csv", col_types = cols(X3 = col_skip(), X4 = col_skip(), X5 = col_skip(), X6 = col_skip(), X7 = col_skip()))
colnames(anagram_data)<-c("size", "time")
View(anagram_data)
plot(anagram_data$size, anagram_data$time, type="l")
title("Anagram Groups")
anagramData = log(dfAnagrams)
plot(anagramData$size, anagramData$time, type="l")
title("Anagram Groups: log transformed")
#word sorting
plot(data$size, data$time, type="l")
title("Word Sorting")
plot(wordSortingData$size, wordSortingData$time, type = "l")
title("Word Sorting: log transformed")
data <- read_csv("DerekOlson/CS6012/assignment03/word_sorting.csv", col_types = cols(X3 = col_skip(), X4 = col_skip(), X5 = col_skip(), X6 = col_skip(), X7 = col_skip()))
colnames(data)<-c("size", "time")
View(data)
#word sorting
plot(data$size, data$time, type="l")
title("Word Sorting")
wordSortingData = log(data)
plot(wordSortingData$size, wordSortingData$time, type = "l")
title("Word Sorting: log transformed")
#word sorting
anagram_data <- read_csv("DerekOlson/CS6012/assignment03/anagrams.csv", col_types = cols(X3 = col_skip(), X4 = col_skip(), X5 = col_skip(), X6 = col_skip(), X7 = col_skip()))
colnames(anagram_data)<-c("size", "time")
View(anagram_data)
plot(anagram_data$size, anagram_data$time, type="l")
title("Anagram Groups")
anagramData = log(dfAnagrams)
plot(anagramData$size, anagramData$time, type="l")
title("Anagram Groups: log transformed")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(readr)
data <- read_csv("DerekOlson/CS6012/assignment03/word_sorting.csv", col_types = cols(X3 = col_skip(), X4 = col_skip(), X5 = col_skip(), X6 = col_skip(), X7 = col_skip()))
library(readr)
data <- read_csv("DerekOlson/CS6012/assignment03/word_sorting.csv", col_types = cols(X3 = col_skip(), X4 = col_skip(), X5 = col_skip(), X6 = col_skip(), X7 = col_skip()))
library(readr)
data <- read_csv("DerekOlson/CS6012/assignment03/word_sorting.csv", col_types = cols(X3 = col_skip(), X4 = col_skip(), X5 = col_skip(), X6 = col_skip(), X7 = col_skip()))
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(readr)
data <- read_csv("DerekOlson/CS6012/assignment03/word_sorting.csv", col_types = cols(X3 = col_skip(), X4 = col_skip(), X5 = col_skip(), X6 = col_skip(), X7 = col_skip()))
library(readr)
data <- read_csv("DerekOlson/CS6012/assignment03/word_sorting.csv")
library(readr)
data <- read_csv("DerekOlson/CS6012/assignment03/word_sorting.csv", col_types = cols(X3 = col_skip(), X4 = col_skip(), X5 = col_skip(), X6 = col_skip(), X7 = col_skip()))
library(readr)
data <- read_csv("DerekOlson/CS6012/assignment03/word_sorting.csv", col_types = cols(X3 = col_skip(), X4 = col_skip(), X5 = col_skip(), X6 = col_skip(), X7 = col_skip()))
colnames(data)<-c("size", "time")
colnames(data)<-c("size", "time")
plot(data$size, data$time, type="l", echo=FALSE)
title("Word Sorting")
plot(data$size, data$time, type="l")
title("Word Sorting")
wordSortingData = log(data)
plot(wordSortingData$size, wordSortingData$time, type = "l")
title("Word Sorting: log transformed")
anagram_data <- read_csv("DerekOlson/CS6012/assignment03/anagrams.csv", col_types = cols(X3 = col_skip(), X4 = col_skip(), X5 = col_skip(), X6 = col_skip(), X7 = col_skip()))
colnames(anagram_data)<-c("size", "time")
plot(anagram_data$size, anagram_data$time, type="l")
title("Anagram Groups")
anagramData = log(dfAnagrams)
anagramData = log(dfAnagrams)
plot(anagramData$size, anagramData$time, type="l")
title("Anagram Groups: log transformed")
areAnagrams_data <- read_csv("DerekOlson/CS6012/assignment03/areAnagrams.csv", col_types = cols(X3 = col_skip(), X4 = col_skip(), X5 = col_skip(), X6 = col_skip(), X7 = col_skip()))
colnames(anagram_data)<-c("size", "time")
View(areAnagrams_data)
areAnagrams_data <- read_csv("DerekOlson/CS6012/assignment03/areAnagrams.csv", col_types = cols(X3 = col_skip(), X4 = col_skip(), X5 = col_skip(), X6 = col_skip(), X7 = col_skip()))
colnames(anagram_data)<-c("size", "time")
View(anagram_data)
View(anagram_data)
View(areAnagrams_data)
View(areAnagrams_data)
View(areAnagrams_data)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE)
library(readr)
data <- read_csv("DerekOlson/CS6012/assignment03/word_sorting.csv", col_types = cols(X3 = col_skip(), X4 = col_skip(), X5 = col_skip(), X6 = col_skip(), X7 = col_skip()))
library(readr)
data <- read_csv("DerekOlson/CS6012/assignment03/word_sorting.csv", col_types = cols(X3 = col_skip(), X4 = col_skip(), X5 = col_skip(), X6 = col_skip(), X7 = col_skip()))
library(readr)
data <- read_csv("DerekOlson/CS6012/assignment03/word_sorting.csv", col_types = cols(X3 = col_skip(), X4 = col_skip(), X5 = col_skip(), X6 = col_skip(), X7 = col_skip()))
library(readr)
data <- read_csv("DerekOlson/CS6012/lab05/times.csv")
View(data)
data <- read_csv("DerekOlson/CS6012/lab05/times.csv", col_names = FALSE)
View(data)
colnames(data) = c("size", "time")
View(data)
View(data)
plot(data$size, data$time, type = "l")
plot(data$size, data$time, type = "l")
lm(data$size, data$time)
lm(data$size~ data$time)
model = lm(data$size~ data$time)
summary(model)
plot(model)
View(data)
```
data <- read_csv("DerekOlson/CS6012/lab05/times.csv", col_names = FALSE)
```
---
title: "lab05"
author: "Derek Olson"
date: "11/13/2019"
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
Question 1:
From an implementation perspective it would have been more efficient to back the sorted set with a Java list. This is due to the fact that Java Lists are part of the standard library and have methods already defined.This makes Java lists more flexible to work with.
However, arrays more efficienlty perform get and set operations. In many instances this performace gain may only be in the realm of nanoseconds.
Question 2:
I expect the contains function to have a Big-O behavior of logN as the sorted set allows for a binary search to determine if the element is contained or not. The binary search uses the sorted nature of the set to systematically drop (not search) large chunks of the set.
```{r}
data <- read_csv("DerekOlson/CS6012/lab05/times.csv", col_names = FALSE)
```
Note that the `echo = FALSE` parameter was added to the code chunk to prevent printing of the R code that generated the plot.
knitr::opts_chunk$set(echo = TRUE)
data <- read_csv("DerekOlson/CS6012/lab05/times.csv", col_names = FALSE)
data <- read_csv("DerekOlson/CS6012/lab05/timesContains.csv", col_names = FALSE)
data <- read_csv("users/derekolson/DerekOlson/CS6012/lab05/timesContains.csv", col_names = FALSE)
data <- read_csv("Users/derekolson/DerekOlson/CS6012/lab05/timesContains.csv", col_names = FALSE)
knitr::opts_chunk$set(echo = TRUE)
data <- read_csv("Users/derekolson/DerekOlson/CS6012/lab05/timesContains.csv", col_names = FALSE)
knitr::opts_chunk$set(echo = TRUE)
library(readr)
data <- read_csv("Users/derekolson/DerekOlson/CS6012/lab05/timesContains.csv", col_names = FALSE)
library(readr)
data <- read_csv("Users/derekolson/DerekOlson/CS6012/lab05/timesContains.csv", col_names = FALSE)
knitr::opts_chunk$set(echo = TRUE)
library(readr)
data <- read_csv("DerekOlson/CS6012/lab05/timesContains.csv", col_names = FALSE)
library(readr)
data <- read_csv("timesContains.csv", col_names = FALSE)
View(data)
library(readr)
data <- read_csv("timesContains.csv", col_names = TRUE)
View(data)
plot(data$Size, data$Time, type = "l")
View(data)
View(data)
data['log_size'] = log2(data$Size)
data['log_size'] = log2(data$Size)
data['log_time'] = log2(data$Time)
plot(data$log_size, data$log_time, type = "l", log="xy")
plot(data$Size, data$log_time, type = "l", log="xy")
plot(data$log_time, data$Size, type = "l", log="xy")
plot(data$log_time, data$log_size, type = "l", log="xy")
plot(data$log_size, data$log_time, type = "l", log="xy")
knitr::opts_chunk$set(echo = TRUE)
#Question 3:
library(readr)
data <- read_csv("timesContains.csv", col_names = TRUE)
plot(data$Size, data$Time, type = "l")
data <- read_csv("timesContains.csv", col_names = TRUE)
View(data)
View(data)
#Question 3:
library(readr)
data <- read_csv("timesContains.csv", col_names = FALSE)
colnames(data) = c("Size", "Time")
plot(data$Size, data$Time, type = "l")
#Question 3:
library(readr)
data <- read_csv("timesContains.csv", col_names = FALSE)
colnames(data) = c("Size", "Time")
plot(data$Size, data$Time, type = "l")
data <- read_csv("timesAdd.csv", col_names = FALSE)
colnames(data) = c("Size", "Time")
plot(data$Size, data$Time, type = "l")
data_add['log_size'] = log2(data$Size)
data_add <- read_csv("timesAdd.csv", col_names = FALSE)
colnames(data_add) = c("Size", "Time")
plot(data_add$Size, data_add$Time, type = "l")
data_add['log_size'] = log2(data$Size)
data_add['log_time'] = log2(data$Time)
plot(data_add$log_size, data_add$log_time, type = "l", log="xy")
knitr::opts_chunk$set(echo = TRUE)
#Question 3:
library(readr)
data <- read_csv("timesContains.csv", col_names = FALSE)
colnames(data) = c("Size", "Time")
plot(data$Size, data$Time, type = "l")
model = lm(data$Time ~ data$Size)
summary(model)
plot(model)
data['log_size'] = log2(data$Size)
data['log_time'] = log2(data$Time)
plot(data$log_size, data$log_time, type = "l", log="xy")
data_add <- read_csv("timesAdd.csv", col_names = FALSE)
colnames(data_add) = c("Size", "Time")
plot(data_add$Size, data_add$Time, type = "l")
data_add['log_size'] = log2(data$Size)
knitr::opts_chunk$set(echo = TRUE)
#Question 3:
library(readr)
data <- read_csv("timesContains.csv", col_names = FALSE)
colnames(data) = c("Size", "Time")
plot(data$Size, data$Time, type = "l")
model = lm(data$Time ~ data$Size)
summary(model)
plot(model)
data['log_size'] = log2(data$Size)
data['log_time'] = log2(data$Time)
plot(data$log_size, data$log_time, type = "l", log="xy")
data_add <- read_csv("timesAdd.csv", col_names = FALSE)
colnames(data_add) = c("Size", "Time")
plot(data_add$Size, data_add$Time, type = "l")
data_add['log_size'] = log2(data_add$Size)
data_add['log_time'] = log2(data_add$Time)
plot(data_add$log_size, data_add$log_time, type = "l", log="xy")
setwd("~/DerekOlson/CS6012/assignment04")
library(readr)
data <- read_csv("sorting_times.csv", col_names = TRUE)
setwd("~/DerekOlson/CS6012/assignment04")
data <- read_csv("sorting_times.csv", col_names = TRUE)
setwd("~/DerekOlson/CS6012/assignment04")
data <- read_csv("sorting_times.csv", col_names = TRUE)
data <- read_csv("/DerekOlson/CS6012/assignment04/sorting_times.csv", col_names = TRUE)
data <- read_csv("~/DerekOlson/CS6012/assignment04/sorting_times.csv", col_names = TRUE)
library(readr)
sorting_times_ <- read_csv("sorting_times .csv")
View(sorting_times_)
data <- read_csv("sorting_times.csv", col_names = TRUE)
data <- read_csv("sorting_times.csv", col_names = TRUE)
View(data)
View(data)
insertionSort = data[1:6,]
View(insertionSort)
View(insertionSort)
insertionSort = data[1:6,2:3]
View(insertionSort)
View(insertionSort)
plot(insertionSort$`Threshold/size`, insertionSort$Time, type = "l")
plot(insertionSort$`Threshold/size`, insertionSort$Time, type = "l", log="y")
plot(insertionSort$`Threshold/size`, insertionSort$Time, type = "l", log="x")
plot(insertionSort$`Threshold/size`, insertionSort$Time, type = "l", log="xy")
quicksort = data[7:,]
quicksort = data[,7:]
quicksort = data[,7:396]
quicksort = data[,7:dim(data)[2]]
quicksort = data[7:dim(data)[1],]
View(quicksort)
View(quicksort)
library(ggplot2)
install.packages("ggplot2")
View(quicksort)
View(quicksort)
ggplot(quicksort, aes(x=`Threshold/size`, y="Time", color = 'Test'))
library(ggplot2)
ggplot(quicksort, aes(x=`Threshold/size`, y="Time", color = 'Test'))
ggplot(quicksort, aes(x=data$Threshold/size, y=data$Time, color = data$Test))
ggplot(quicksort, aes(x=data$`Threshold/size`, y=data$Time, color = data$Test))
ggplot(quicksort), aes(x=quicksort$`Threshold/size`, y=quicksort$Time, color = quicksort$Test))
ggplot(quicksort, aes(x=quicksort$`Threshold/size`, y=quicksort$Time, color = quicksort$Test))
ggplot(quicksort)+geom_line(aes(x=quicksort$`Threshold/size`, y=quicksort$Time, color = quicksort$Test) )
ggplot(insertionSort)+geom_line(x=insertionSort$`Threshold/size`, y=insertionSort$Time, log="xy")
ggplot(insertionSort)+geom_line(x=insertionSort$`Threshold/size`, y=insertionSort$Time)
View(insertionSort)
View(insertionSort)
ggplot(insertionSort)+geom_line(aes(x=insertionSort$`Threshold/size`, y=insertionSort$Time))
ggplot(insertionSort)+geom_line(aes(x=insertionSort$`Threshold/size`, y=insertionSort$Time))
scale_y_continuous(trans='log2')
insertionSort = data[1:6,2:3]
sp = ggplot(insertionSort)+geom_line(aes(x=insertionSort$`Threshold/size`, y=insertionSort$Time))
sp+scale_y_continuous(trans='log2')
sp = ggplot(insertionSort)+geom_line(aes(x=insertionSort$`Threshold/size`, y=insertionSort$Time))
sp+scale_x_continuous(trans='log2')
sp = ggplot(insertionSort)+geom_line(aes(x=insertionSort$`Threshold/size`, y=insertionSort$Time, color='blue'))
sp = ggplot(insertionSort)+geom_line(aes(color='steelblue', x=insertionSort$`Threshold/size`, y=insertionSort$Time))
insertionSort = data[1:6,2:3]
sp = ggplot(insertionSort)+geom_line(aes(color='steelblue', x=insertionSort$`Threshold/size`, y=insertionSort$Time))
sp+scale_x_continuous(trans='log2')
data <- read_csv("sorting_times.csv", col_names = F)
colnames(data) = c("Size", "Time")
colnames(data) = c("Test","Size", "Time")
quicksort = data#[7:dim(data)[1],]
ggplot(quicksort)+geom_line(aes(x=quicksort$`Threshold/size`, y=quicksort$Time, color = quicksort$Test))
ggplot(quicksort)+geom_line(aes(x=quicksort$Size`, y=quicksort$Time, color = quicksort$Test))
ggplot(quicksort)+geom_line(aes(x=quicksort$Size, y=quicksort$Time, color = quicksort$Test))
)
ggplot(quicksort)+geom_line(aes(x=quicksort$Size, y=quicksort$Time, color = quicksort$Test))
View(quicksort)
View(quicksort)
data <- read_csv("sorting_times_quicksort.csv", col_names = F)
colnames(data) = c("Test","Size", "Time")
quicksort = data#[7:dim(data)[1],]
ggplot(quicksort)+geom_line(aes(x=quicksort$Size, y=quicksort$Time, color = quicksort$Test))
install.packages('lme4')
xyplot(quicksort$Time ~ quicksort$Size, groups=quicksort$Test, data=quicksort, type='l')
fits <- lmList(quicksort$Time ~ quicksort$Size | quicksort$Test, data=quicksort)
fits
library(lme4)
xyplot(quicksort$Time ~ quicksort$Size, groups=quicksort$Test, data=quicksort, type='l')
fits <- lmList(quicksort$Time ~ quicksort$Size | quicksort$Test, data=quicksort)
fits
xyplot(quicksort$Time ~ quicksort$Size, groups=quicksort$Test, data=quicksort, type='l')
library(lattice)
xyplot(quicksort$Time ~ quicksort$Size, groups=quicksort$Test, data=quicksort, type='l')
xyplot(quicksort$Time ~ quicksort$Size, groups=quicksort$Test, data=quicksort, type='l')
fits <- lmList(quicksort$Time ~ quicksort$Size | quicksort$Test, data=quicksort)
fits
ggplot(quicksort)+geom_line(aes(x=quicksort$Size, y=quicksort$Time, color = quicksort$Test))+ geom_smooth(method = "lm", fill = NA)
sp = ggplot(quicksort)+geom_line(aes(x=quicksort$Size, y=quicksort$Time, color = quicksort$Test))
sp+ geom_smooth(method = "lm", fill = NA)
sp = ggplot(quicksort)+geom_line(aes(x=quicksort$Size, y=quicksort$Time, color = quicksort$Test))
sp+scale_x_continuous(trans='log2')
setwd("~/DerekOlson/CS6012/assignment04")
data <- read_csv("sorting_times_quicksort2.csv", col_names = T)
quicksort = data#[7:dim(data)[1],]
sp = ggplot(quicksort)+geom_line(aes(x=quicksort$Size, y=quicksort$Time, color = quicksort$Test))
sp+scale_x_continuous(trans='log2')
sp = ggplot(quicksort)+geom_abline(aes(x=quicksort$Size, y=quicksort$Time, color = quicksort$Test))
sp+scale_x_continuous(trans='log2')
p <- ggplot(quicksort, aes(quicksort$Size, y=quicksort$Time,color = quicksort$Test)) +
geom_point()
# Add regression line
p + geom_smooth(method = lm)
View(quicksort)
View(quicksort)
quicksort = quicksort[!15663,]
sp = ggplot(quicksort)+geom_line(aes(x=quicksort$Size, y=quicksort$Time, color = quicksort$Test))
sp+scale_x_continuous(trans='log2')
p <- ggplot(quicksort, aes(quicksort$Size, y=quicksort$Time,color = quicksort$Test)) +
geom_point()
# Add regression line
p + geom_smooth(method = lm)
data <- read_csv("sorting_times_quicksort2.csv", col_names = T)
quicksort = data#[7:dim(data)[1],]
View(quicksort)
View(quicksort)
View(quicksort)
data <- read_csv("sorting_times_quicksort2.csv", col_names = T)
quicksort = data#[7:dim(data)[1],]
sp = ggplot(quicksort)+geom_line(aes(x=quicksort$Size, y=quicksort$Time, color = quicksort$Test))
sp+scale_x_continuous(trans='log2')
quicksort = data#[7:dim(data)[1],]
sp = ggplot(quicksort)+geom_line(aes(x=quicksort$Size, y=quicksort$Time, color = quicksort$Test))
sp = ggplot(quicksort)+geom_line(aes(x=quicksort$Size, y=quicksort$Time, color = quicksort$Test))
p <- ggplot(quicksort, aes(quicksort$Size, y=quicksort$Time,color = quicksort$Test)) +
geom_point()
# Add regression line
p + geom_smooth(method = lm)
thresholdData <- read_csv("merge_times_threshold.csv", col_names = T)
View(thresholdData)
View(thresholdData)
thresholdData <- read_csv("merge_times_threshold.csv", col_names = T)
View(thresholdData)
thresholdData <- read_csv("merge_times_threshold.csv", col_names = T)
View(thresholdData)
merge_quick = read_csv("merge_quick_compare.csv", col_names = T)
View(merge_quick)
sp = ggplot(merge_quick)+geom_line(aes(x=merge_quick$Size, y=merge_quick$Time, color = merge_quick$Test))
sp+scale_x_continuous(trans='log2')
sp = ggplot(merge_quick)+geom_line(aes(x=merge_quick$Size, y=merge_quick$Time, color = merge_quick$Test))
merge_quick = read_csv("merge_quick_compare.csv", col_names = T)
sp = ggplot(merge_quick)+geom_line(aes(x=merge_quick$Size, y=merge_quick$Time, color = merge_quick$Test))
ggplot(merge_quick)+geom_line(aes(x=merge_quick$Size, y=merge_quick$Time, color = merge_quick$Test))
thresholdData <- read_csv("merge_threshold_compare.csv", col_names = T)
ggplot(thresholdData)+geom_line(aes(x=thresholdData$Size, y=thresholdData$Time, color = thresholdData$Test))
sp = ggplot(thresholdData)+geom_line(aes(x=thresholdData$Size, y=thresholdData$Time, color = thresholdData$Test))
sp+scale_x_continuous(trans='log2')
View(thresholdData)
View(thresholdData)
thresholdData <- read_csv("merge_threshold_compare.csv", col_names = T)
sp = ggplot(thresholdData)+geom_line(aes(x=thresholdData$Size, y=thresholdData$Time, color = thresholdData$Test))
sp+scale_x_continuous(trans='log2')
ggplot(thresholdData)+geom_line(aes(x=thresholdData$Size, y=thresholdData$Time, color = thresholdData$Test))
